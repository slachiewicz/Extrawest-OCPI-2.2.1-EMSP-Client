name: Build Project with OpenAPI Generator and Publish to Maven

on: [push]

jobs:
  build-project:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'


      - name: Start Java application
        run: |
          mvn spring-boot:run &

      - name: Wait for Java application to start
        run: sleep 30

      - name: Download file
        run: |
          wget http://localhost:8080/v3/api-docs -O downloaded_file.json

      - name: Turn off Java application
        run: |
          # Find and kill the Java application process
          # Replace the following line with your actual command to turn off the Java application
          kill $(lsof -t -i:8080)
          
          
          

#      - name: Exclude dependencies and packages
#        run: |
#          sed -i 's/<exclusion>/<exclusion><groupId>com.extrawest<\/groupId><artifactId>Extrawest-OCPI-2.2.1-EMSP-Server<\/artifactId><\/exclusion><exclusion>/g' pom.xml
#          sed -i 's/<exclude>com.extrawest.ocpi221emsp_client.service\/**<\/exclude>//g' pom.xml

      - name: Build project with OpenAPI Generator
        run: |
          mvn clean -Pclient-generation generate-sources -Dopenapi.generator.inputSpec=downloaded_file
   

      - name: Display build output
        run: |
          # Replace the following line with your actual command to display build output
          cat target/build.log

  publish:
    runs-on: ubuntu-latest
    needs: build-project
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Publish package
        env:
          JRELEASER_NEXUS2_USERNAME: ${{ secrets.JRELEASER_NEXUS2_USERNAME }}
          JRELEASER_NEXUS2_PASSWORD: ${{ secrets.JRELEASER_NEXUS2_PASSWORD }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -Prelease deploy jreleaser:deploy -DaltDeploymentRepository=local::file:./target/staging-deploy
