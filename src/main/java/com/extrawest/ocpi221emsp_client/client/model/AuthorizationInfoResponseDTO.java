/*
 * OCPI 2.2.1
 * This API exposes endpoints to manage OCPI entities.
 *
 * OpenAPI spec version: 1.0
 * Contact: ocpi@extrawest.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.extrawest.ocpi221emsp_client.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.extrawest.ocpi221emsp_client.client.model.DisplayText;
import com.extrawest.ocpi221emsp_client.client.model.LocationReferences;
import com.extrawest.ocpi221emsp_client.client.model.Token;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * AuthorizationInfoResponseDTO
 */



public class AuthorizationInfoResponseDTO {
  /**
   * Gets or Sets allowed
   */
  public enum AllowedEnum {
    ALLOWED("ALLOWED"),
    BLOCKED("BLOCKED"),
    EXPIRED("EXPIRED"),
    NO_CREDIT("NO_CREDIT"),
    NOT_ALLOWED("NOT_ALLOWED");

    private String value;

    AllowedEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static AllowedEnum fromValue(String input) {
      for (AllowedEnum b : AllowedEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("allowed")
  private AllowedEnum allowed = null;

  @JsonProperty("token")
  private Token token = null;

  @JsonProperty("location")
  private LocationReferences location = null;

  @JsonProperty("authorization_reference")
  private String authorizationReference = null;

  @JsonProperty("info")
  private DisplayText info = null;

  public AuthorizationInfoResponseDTO allowed(AllowedEnum allowed) {
    this.allowed = allowed;
    return this;
  }

   /**
   * Get allowed
   * @return allowed
  **/
  @Schema(required = true, description = "")
  public AllowedEnum getAllowed() {
    return allowed;
  }

  public void setAllowed(AllowedEnum allowed) {
    this.allowed = allowed;
  }

  public AuthorizationInfoResponseDTO token(Token token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @Schema(required = true, description = "")
  public Token getToken() {
    return token;
  }

  public void setToken(Token token) {
    this.token = token;
  }

  public AuthorizationInfoResponseDTO location(LocationReferences location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @Schema(description = "")
  public LocationReferences getLocation() {
    return location;
  }

  public void setLocation(LocationReferences location) {
    this.location = location;
  }

  public AuthorizationInfoResponseDTO authorizationReference(String authorizationReference) {
    this.authorizationReference = authorizationReference;
    return this;
  }

   /**
   * Get authorizationReference
   * @return authorizationReference
  **/
  @Schema(description = "")
  public String getAuthorizationReference() {
    return authorizationReference;
  }

  public void setAuthorizationReference(String authorizationReference) {
    this.authorizationReference = authorizationReference;
  }

  public AuthorizationInfoResponseDTO info(DisplayText info) {
    this.info = info;
    return this;
  }

   /**
   * Get info
   * @return info
  **/
  @Schema(description = "")
  public DisplayText getInfo() {
    return info;
  }

  public void setInfo(DisplayText info) {
    this.info = info;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthorizationInfoResponseDTO authorizationInfoResponseDTO = (AuthorizationInfoResponseDTO) o;
    return Objects.equals(this.allowed, authorizationInfoResponseDTO.allowed) &&
        Objects.equals(this.token, authorizationInfoResponseDTO.token) &&
        Objects.equals(this.location, authorizationInfoResponseDTO.location) &&
        Objects.equals(this.authorizationReference, authorizationInfoResponseDTO.authorizationReference) &&
        Objects.equals(this.info, authorizationInfoResponseDTO.info);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowed, token, location, authorizationReference, info);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthorizationInfoResponseDTO {\n");
    
    sb.append("    allowed: ").append(toIndentedString(allowed)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    authorizationReference: ").append(toIndentedString(authorizationReference)).append("\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
