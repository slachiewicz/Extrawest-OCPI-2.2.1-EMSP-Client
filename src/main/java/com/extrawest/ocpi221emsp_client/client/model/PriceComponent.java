/*
 * OCPI 2.2.1
 * This API exposes endpoints to manage OCPI entities.
 *
 * OpenAPI spec version: 1.0
 * Contact: ocpi@extrawest.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.extrawest.ocpi221emsp_client.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * PriceComponent
 */



public class PriceComponent {
  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    ENERGY("ENERGY"),
    FLAT("FLAT"),
    PARKING_TIME("PARKING_TIME"),
    TIME("TIME");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("price")
  private Float price = null;

  @JsonProperty("vat")
  private Float vat = null;

  @JsonProperty("step_size")
  private Integer stepSize = null;

  public PriceComponent type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public PriceComponent price(Float price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @Schema(description = "")
  public Float getPrice() {
    return price;
  }

  public void setPrice(Float price) {
    this.price = price;
  }

  public PriceComponent vat(Float vat) {
    this.vat = vat;
    return this;
  }

   /**
   * Get vat
   * @return vat
  **/
  @Schema(description = "")
  public Float getVat() {
    return vat;
  }

  public void setVat(Float vat) {
    this.vat = vat;
  }

  public PriceComponent stepSize(Integer stepSize) {
    this.stepSize = stepSize;
    return this;
  }

   /**
   * Get stepSize
   * @return stepSize
  **/
  @Schema(description = "")
  public Integer getStepSize() {
    return stepSize;
  }

  public void setStepSize(Integer stepSize) {
    this.stepSize = stepSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PriceComponent priceComponent = (PriceComponent) o;
    return Objects.equals(this.type, priceComponent.type) &&
        Objects.equals(this.price, priceComponent.price) &&
        Objects.equals(this.vat, priceComponent.vat) &&
        Objects.equals(this.stepSize, priceComponent.stepSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, price, vat, stepSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PriceComponent {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    vat: ").append(toIndentedString(vat)).append("\n");
    sb.append("    stepSize: ").append(toIndentedString(stepSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
