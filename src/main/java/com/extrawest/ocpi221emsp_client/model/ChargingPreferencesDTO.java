/*
 * OCPI 2.2.1
 * This API exposes endpoints to manage OCPI entities.
 *
 * OpenAPI spec version: 1.0
 * Contact: ocpi@extrawest.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.extrawest.ocpi221emsp_client.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * ChargingPreferencesDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T06:10:29.834942772Z[GMT]")

public class ChargingPreferencesDTO {
  /**
   * Gets or Sets profileType
   */
  @JsonAdapter(ProfileTypeEnum.Adapter.class)
  public enum ProfileTypeEnum {
    @SerializedName("CHEAP")
    CHEAP("CHEAP"),
    @SerializedName("FAST")
    FAST("FAST"),
    @SerializedName("GREEN")
    GREEN("GREEN"),
    @SerializedName("REGULAR")
    REGULAR("REGULAR");

    private String value;

    ProfileTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ProfileTypeEnum fromValue(String input) {
      for (ProfileTypeEnum b : ProfileTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ProfileTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProfileTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ProfileTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ProfileTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("profile_type")
  private ProfileTypeEnum profileType = null;

  @SerializedName("departure_time")
  private OffsetDateTime departureTime = null;

  @SerializedName("energyNeed")
  private Float energyNeed = null;

  @SerializedName("discharge_allowed")
  private Boolean dischargeAllowed = null;

  public ChargingPreferencesDTO profileType(ProfileTypeEnum profileType) {
    this.profileType = profileType;
    return this;
  }

   /**
   * Get profileType
   * @return profileType
  **/
  @Schema(required = true, description = "")
  public ProfileTypeEnum getProfileType() {
    return profileType;
  }

  public void setProfileType(ProfileTypeEnum profileType) {
    this.profileType = profileType;
  }

  public ChargingPreferencesDTO departureTime(OffsetDateTime departureTime) {
    this.departureTime = departureTime;
    return this;
  }

   /**
   * Get departureTime
   * @return departureTime
  **/
  @Schema(description = "")
  public OffsetDateTime getDepartureTime() {
    return departureTime;
  }

  public void setDepartureTime(OffsetDateTime departureTime) {
    this.departureTime = departureTime;
  }

  public ChargingPreferencesDTO energyNeed(Float energyNeed) {
    this.energyNeed = energyNeed;
    return this;
  }

   /**
   * Get energyNeed
   * @return energyNeed
  **/
  @Schema(description = "")
  public Float getEnergyNeed() {
    return energyNeed;
  }

  public void setEnergyNeed(Float energyNeed) {
    this.energyNeed = energyNeed;
  }

  public ChargingPreferencesDTO dischargeAllowed(Boolean dischargeAllowed) {
    this.dischargeAllowed = dischargeAllowed;
    return this;
  }

   /**
   * Get dischargeAllowed
   * @return dischargeAllowed
  **/
  @Schema(description = "")
  public Boolean isDischargeAllowed() {
    return dischargeAllowed;
  }

  public void setDischargeAllowed(Boolean dischargeAllowed) {
    this.dischargeAllowed = dischargeAllowed;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChargingPreferencesDTO chargingPreferencesDTO = (ChargingPreferencesDTO) o;
    return Objects.equals(this.profileType, chargingPreferencesDTO.profileType) &&
        Objects.equals(this.departureTime, chargingPreferencesDTO.departureTime) &&
        Objects.equals(this.energyNeed, chargingPreferencesDTO.energyNeed) &&
        Objects.equals(this.dischargeAllowed, chargingPreferencesDTO.dischargeAllowed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(profileType, departureTime, energyNeed, dischargeAllowed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChargingPreferencesDTO {\n");
    
    sb.append("    profileType: ").append(toIndentedString(profileType)).append("\n");
    sb.append("    departureTime: ").append(toIndentedString(departureTime)).append("\n");
    sb.append("    energyNeed: ").append(toIndentedString(energyNeed)).append("\n");
    sb.append("    dischargeAllowed: ").append(toIndentedString(dischargeAllowed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
